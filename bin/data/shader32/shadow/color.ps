////////////////////////////////////////////////////////////////////////////////
//    ScopeFun Oscilloscope ( http://www.scopefun.com )
//    Copyright (C) 2016 David Košenina
//
//    This file is part of ScopeFun Oscilloscope.
//
//    ScopeFun Oscilloscope is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    ScopeFun Oscilloscope is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this ScopeFun Oscilloscope.  If not, see <http://www.gnu.org/licenses/>.
//
////////////////////////////////////////////////////////////////////////////////




layout (std140) uniform PSCBuffer0
{
	vec4 gPSAdjust;
	vec4 gPSSSColor;
};

uniform sampler2D gPSTexture0;

in  vec2 Tex;
out vec4 outColor;

vec4 lerp(vec4 a, vec4 b, float s)
{
    return (a + (b - a) * s);
}

void main()
{	
	float shadow = texture( gPSTexture0, Tex ).x;
    vec4 colors[3];
	colors[0] = vec4(0,0,1,1);
	colors[1] = vec4(1,1,0,1);
	colors[2] = vec4(1,0,0,1);
	float index = (shadow < 0.5) ? 0.0 : 1.0;	
    vec4 res1     = lerp(colors[0], colors[1], (shadow - index*0.5)/0.5);
    vec4 res2     = lerp(colors[1], colors[2], (shadow - index*0.5)/0.5);
    outColor        = lerp(res1, res2, index );
	if( shadow == 0 ) outColor.a  = 0; 
	else outColor.a  = 1;
}
